name: Crear Ranking de Licitaciones

on:
  workflow_dispatch:
  repository_dispatch:
    types: [execute_workflow]

jobs:
  run_script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip 
          pip install -r requirements.txt

      # Instalar Google Chrome
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
      # Descargar e instalar ChromeDriver
      - name: Set up ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f 3 | cut -d '.' -f 1)
          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
          wget https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip -d /usr/local/bin/
          
      - name: Correr Script Licitaciones
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          PORTAL_USER: ${{ secrets.PORTAL_USER }}          # Usuario de SICEP
          PORTAL_PASSWORD: ${{ secrets.PORTAL_PASSWORD }}  # Contraseña de SICEP
        run: python your_script.py

      - name: Guardar archivo de log
        if: always()  # Esto asegura que el paso se ejecute incluso si otros pasos fallan
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: your_script.log  # Asegúrate de que este nombre coincida con el nombre del archivo .log que estás generando
      

      - name: Output Success Message
        run: echo "Script ejecutado correctamente en GitHub Actions."